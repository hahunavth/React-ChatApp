{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/Sidebar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatInput.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/RoomInfo.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","Store/Reducer/AuthSlice.js","Store/index.js","components/Modals/MemberListModal.js","Context/ThemeProvider.js","components/PrivateRoute/index.jsx","App.js","components/StyledBtn.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","window","location","hostname","addDocument","collection","data","query","field","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleLogin","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keywords","toLowerCase","justify","style","height","span","textAlign","level","width","marginBottom","onClick","AuthContext","React","createContext","AuthProvider","children","useState","setUser","history","useHistory","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","Provider","value","position","inset","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","isMemberListVisible","setIsMemberListVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","console","log","usersCondition","members","clearState","WrapperStyled","styled","div","props","theme","colors","border","backgroundPrimary","textPrimary","UserInfo","src","size","className","charAt","toUpperCase","Text","danger","ghost","shape","signOut","Panel","Collapse","PanelStyled","background","LinkStyled","Link","RoomList","selectRoomStyled","title","defaultActiveKey","header","padding","paddingLeft","paddingRight","borderRadius","copyable","type","block","icon","PlusSquareOutlined","SidebarStyled","Sidebar","CurrentUserWrapperStyled","formatDate","seconds","formattedDate","formatRelative","Date","slice","Message","text","FormStyled","Form","ChatWindow","inputValue","setInputValue","useForm","form","inputRef","useRef","handleOnSubmit","roomId","resetFields","current","setTimeout","focus","Item","ref","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","SendOutlined","ContentStyled","MessageListStyled","messageListRef","el","messages","scrollTop","scrollHeight","scrollIntoView","tip","bottom","left","indicator","LoadingOutlined","fontSize","spin","mes","transform","display","justifyContent","flexDirection","MessageOutlined","color","fontWeight","message","showIcon","margin","closable","RoomInfo","handleDeleteRoom","delete","then","err","get","querySnapshot","deleteDocumentWhere","GroupInfo","Group","maxCount","member","description","UserAddOutlined","UsergroupAddOutlined","FileImageOutlined","LogoutOutlined","tmpRoom","JSON","parse","stringify","shift","oldData","newData","update","HeaderStyled","ButtonGroupStyled","ChatRoom","AddRoomModal","visible","onOk","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","fetching","setFetching","options","setOptions","debounceFetcher","debounce","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","includes","InviteMemberModal","setValue","val","destroyOnClose","mode","newValue","authSlice","createSlice","initialState","reducers","state","action","removeUser","actions","getUser","store","configureStore","reducer","AuthSlice","MemberListModal","handleDeleteUser","bind","colorScheme","light","primary","secondary","black","white","yellow","red","tomato","purple","textSecondary","opacity","dark","PrivateRoute","component","path","exac","exact","to","ThemeBtn","setTheme","App","button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b38454f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  // apiKey: 'AIzaSyBRpDZ63mVfrzmzTjHFjRssP4cOvw_jc04',\n  // authDomain: 'chat-app-c975a.firebaseapp.com',\n  // projectId: 'chat-app-c975a',\n  // storageBucket: 'chat-app-c975a.appspot.com',\n  // messagingSenderId: '942648297216',\n  // appId: '1:942648297216:web:d8c4321ba778c8808f95e5',\n  // measurementId: 'G-01WLMKYFFM',\n\n  apiKey: \"AIzaSyBMckRZQtEsbti4To5Nrf-ZoGOpA2MROEM\",\n  authDomain: \"chat-app-67a8b.firebaseapp.com\",\n  databaseURL:\n    \"https://chat-app-67a8b-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"chat-app-67a8b\",\n  storageBucket: \"chat-app-67a8b.appspot.com\",\n  messagingSenderId: \"550759354703\",\n  appId: \"1:550759354703:web:e08640596dccf3b917f53a\",\n  measurementId: \"G-PL5J35GXWF\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nif (window.location.hostname === \"localhost\") {\n  // auth.useEmulator('http://localhost:9099');\n  // db.useEmulator('localhost', '8080');\n}\n\nexport { db, auth };\nexport default firebase;\n","import firebase, { db } from \"./config\";\n\nexport const addDocument = (collection, data) => {\n  const query = db.collection(collection);\n\n  //WARNING: cannot add field undefined\n  for (const field in data) {\n    if (typeof data[field] === \"undefined\") {\n      data[field] = \"\";\n    }\n  }\n\n  query.add({\n    ...data,\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n};\n\nexport const deleteDocument = (collection, data) => {\n  const query = db.collection(collection);\n  query\n    .doc(data)\n    .delete()\n    .then(\n      () => {\n        console.log(\"deleted\");\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const updateDocument = (collection, oldData, newData) => {\n  const query = db.collection(collection);\n  query\n    .doc(oldData.id)\n    .update(newData)\n    .then(\n      () => {\n        console.log(\"updated\");\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const deleteDocumentWhere = (collection, condition) => {\n  const query = db.collection(collection);\n  // console.log(query.where(\"roomId\", \"==\", condition.compareValue));\n  query\n    .where(condition.fieldName, condition.operator, condition.compareValue)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        doc.ref.delete();\n      });\n    });\n};\n\n// tao keywords cho displayName, su dung cho search\nexport const generateKeywords = (displayName) => {\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\n  const name = displayName.split(\" \").filter((word) => word);\n\n  const length = name.length;\n  let flagArray = [];\n  let result = [];\n  let stringArray = [];\n\n  /**\n   * khoi tao mang flag false\n   * dung de danh dau xem gia tri\n   * tai vi tri nay da duoc su dung\n   * hay chua\n   **/\n  for (let i = 0; i < length; i++) {\n    flagArray[i] = false;\n  }\n\n  const createKeywords = (name) => {\n    const arrName = [];\n    let curName = \"\";\n    name.split(\"\").forEach((letter) => {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  };\n\n  function findPermutation(k) {\n    for (let i = 0; i < length; i++) {\n      if (!flagArray[i]) {\n        flagArray[i] = true;\n        result[k] = name[i];\n\n        if (k === length - 1) {\n          stringArray.push(result.join(\" \"));\n        }\n\n        findPermutation(k + 1);\n        flagArray[i] = false;\n      }\n    }\n  }\n\n  findPermutation(0);\n\n  const keywords = stringArray.reduce((acc, cur) => {\n    const words = createKeywords(cur);\n    return [...acc, ...words];\n  }, []);\n\n  return keywords;\n};\n","import React from \"react\";\nimport { Row, Col, Button, Typography } from \"antd\";\nimport firebase, { auth } from \"../../firebase/config\";\nimport { addDocument, generateKeywords } from \"../../firebase/services\";\n\nconst { Title } = Typography;\n\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport default function Login() {\n  const handleLogin = async (provider) => {\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n    if (additionalUserInfo?.isNewUser) {\n      addDocument(\"users\", {\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL,\n        uid: user.uid,\n        providerId: additionalUserInfo.providerId,\n        keywords: generateKeywords(user.displayName?.toLowerCase()),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row justify=\"center\" style={{ height: 800 }}>\n        <Col span={8}>\n          <Title style={{ textAlign: \"center\" }} level={3}>\n            Fun Chat\n          </Title>\n          <Button\n            style={{ width: \"100%\", marginBottom: 5 }}\n            onClick={() => handleLogin(googleProvider)}\n          >\n            Đăng nhập bằng Google\n          </Button>\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => handleLogin(fbProvider)}\n          >\n            Đăng nhập bằng Facebook\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth } from \"../firebase/config\";\nimport { Spin } from \"antd\";\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider({ children }) {\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n\n  React.useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged((user) => {\n      if (user) {\n        const { displayName, email, uid, photoURL } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL,\n        });\n        // dispatch(\n        //   setUser({\n        //     displayName,\n        //     email,\n        //     uid,\n        //     photoURL,\n        //   })\n        // );\n        setIsLoading(false);\n        history.push(\"/react_chat-app\");\n        return;\n      }\n\n      // reset user info\n      setUser({});\n      setIsLoading(false);\n      history.push(\"/react_chat-app/login\");\n    });\n\n    // clean function\n    return () => {\n      unsubscibed();\n    };\n  }, [history]);\n\n  return (\n    <AuthContext.Provider value={{ user }}>\n      {isLoading ? <Spin style={{ position: \"fixed\", inset: 0 }} /> : children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { db } from \"../firebase/config\";\n\nconst useFirestore = (collection, condition) => {\n  const [documents, setDocuments] = useState([]);\n\n  React.useEffect(() => {\n    let collectionRef = db.collection(collection).orderBy(\"createdAt\");\n    if (condition) {\n      if (!condition.compareValue || !condition.compareValue.length) {\n        // reset documents data\n        setDocuments([]);\n        return;\n      }\n\n      collectionRef = collectionRef.where(\n        condition.fieldName,\n        condition.operator,\n        condition.compareValue\n      );\n    }\n\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\n      const documents = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      setDocuments(documents);\n    });\n\n    return unsubscribe;\n  }, [collection, condition]);\n\n  return documents;\n};\n\nexport default useFirestore;\n","import React, { useState } from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { AuthContext } from \"./AuthProvider\";\n\nexport const AppContext = React.createContext();\n\nexport default function AppProvider({ children }) {\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\n  const [isMemberListVisible, setIsMemberListVisible] = useState(false);\n  const [selectedRoomId, setSelectedRoomId] = useState(\"\");\n\n  const {\n    user: { uid },\n  } = React.useContext(AuthContext);\n\n  const roomsCondition = React.useMemo(() => {\n    return {\n      fieldName: \"members\",\n      operator: \"array-contains\",\n      compareValue: uid,\n    };\n  }, [uid]);\n\n  const rooms = useFirestore(\"rooms\", roomsCondition);\n\n  const selectedRoom = React.useMemo(\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\n    [rooms, selectedRoomId]\n  );\n\n  console.log(selectedRoom);\n\n  const usersCondition = React.useMemo(() => {\n    return {\n      fieldName: \"uid\",\n      operator: \"in\",\n      compareValue: selectedRoom.members,\n    };\n  }, [selectedRoom.members]);\n\n  const members = useFirestore(\"users\", usersCondition);\n\n  const clearState = () => {\n    setSelectedRoomId(\"\");\n    setIsAddRoomVisible(false);\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        rooms,\n        members,\n        selectedRoom,\n        isAddRoomVisible,\n        isMemberListVisible,\n        setIsMemberListVisible,\n        setIsAddRoomVisible,\n        selectedRoomId,\n        setSelectedRoomId,\n        isInviteMemberVisible,\n        setIsInviteMemberVisible,\n        clearState,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Button, Avatar, Typography } from \"antd\";\n\nimport { auth } from \"../../firebase/config\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { AppContext } from \"../../Context/AppProvider\";\n\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { colorScheme } from \"../../constants/theme\";\n\nconst WrapperStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 16px;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  background: ${(props) => props.theme.colors.backgroundPrimary};\n  margin: 20px 20px;\n  border-radius: 25px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  .avatar {\n    border: 1px solid ${(props) => props.theme.colors.border};\n    width: 50px;\n    height: 50px;\n    margin-bottom: 10px;\n  }\n  .username {\n    color: ${(props) => props.theme.colors.textPrimary};\n    font-weight: bold;\n    font-size: 20px;\n    margin-left: 5px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport default function UserInfo() {\n  const {\n    user: { displayName, photoURL },\n  } = React.useContext(AuthContext);\n  const { clearState } = React.useContext(AppContext);\n\n  return (\n    // <ThemeProvider theme={colorScheme.light}>\n    <WrapperStyled>\n      <Avatar src={photoURL} size=\"large\" className=\"avatar\">\n        {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n      </Avatar>\n      <Typography.Text className=\"username\">{displayName}</Typography.Text>\n      <Button\n        danger\n        ghost\n        shape=\"round\"\n        size=\"small\"\n        onClick={() => {\n          // clear state in App Provider when logout\n          clearState();\n          auth.signOut();\n        }}\n      >\n        Đăng xuất\n      </Button>\n    </WrapperStyled>\n    // </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport { Collapse, Typography, Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { colorScheme } from \"../../constants/theme\";\n\nconst { Panel } = Collapse;\n\nconst PanelStyled = styled(Panel)`\n  padding: 0;\n  margin: 0;\n  &&& {\n    .ant-collapse-header,\n    p {\n      color: ${(props) => props.theme.colors.background};\n    }\n\n    .ant-collapse-content-box {\n      padding: 0 15px;\n      margin: 0;\n    }\n\n    .add-room {\n      color: black;\n      padding: 0;\n    }\n  }\n`;\n\nconst LinkStyled = styled(Typography.Link)`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nexport default function RoomList() {\n  const { rooms, setIsAddRoomVisible, selectedRoomId, setSelectedRoomId } =\n    React.useContext(AppContext);\n\n  const handleAddRoom = () => {\n    setIsAddRoomVisible(true);\n  };\n\n  const selectRoomStyled = (room, selectedRoomId) => {\n    console.log(room.id);\n    console.log(selectedRoomId);\n    return room.id === selectedRoomId ? \"#f3f6fb\" : \"#ffffff\";\n  };\n\n  const title = \"Danh sách các phòng \" + rooms.length;\n\n  return (\n    <Collapse ghost defaultActiveKey={[\"1\"]}>\n      <PanelStyled header={title} key=\"1\">\n        <div\n          style={{\n            padding: \"0px\",\n          }}\n        >\n          {rooms.map((room) => (\n            <LinkStyled\n              style={{\n                padding: \"10px\",\n                paddingLeft: \"50px\",\n                paddingRight: \"50px\",\n                borderRadius: \"10px\",\n                background: selectRoomStyled(room, selectedRoomId),\n              }}\n              key={room.id}\n              copyable={false}\n              onClick={() => setSelectedRoomId(room.id)}\n            >\n              {room.name}\n            </LinkStyled>\n          ))}\n          <Button\n            type=\"text\"\n            block\n            icon={<PlusSquareOutlined />}\n            className=\"add-room\"\n            onClick={handleAddRoom}\n          >\n            Thêm phòng\n          </Button>\n        </div>\n      </PanelStyled>\n    </Collapse>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport UserInfo from \"./UserInfo\";\nimport RoomList from \"./RoomList\";\nimport styled from \"styled-components\";\n\nconst SidebarStyled = styled.div`\n  height: 100vh;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nexport default function Sidebar() {\n  return (\n    <SidebarStyled>\n      <Row>\n        <Col span={24}>\n          <UserInfo />\n        </Col>\n        <Col span={24}>\n          <RoomList />\n        </Col>\n      </Row>\n    </SidebarStyled>\n  );\n}\n","import React from \"react\";\nimport { Avatar, Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { formatRelative } from \"date-fns/esm\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\n\nconst WrapperStyled = styled.div`\n  margin-bottom: 30px;\n  padding-left: 20px;\n\n  .author {\n    margin-left: 5px;\n    font-weight: bold;\n  }\n\n  .date {\n    margin-left: 10px;\n    font-size: 11px;\n    color: #a7a7a7;\n  }\n\n  .content {\n    margin-left: 20px;\n    background: #ffffff;\n    color: #5f768c;\n    padding: 8px;\n    border-radius: 10px;\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2), 0 3px 4px 0 rgba(0, 0, 0, 0.19);\n    max-width: 100px;\n  }\n`;\n\nconst CurrentUserWrapperStyled = styled.div`\n  margin-bottom: 30px;\n  padding-right: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: space-between;\n\n  .messages-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n\n    align-items: space-between;\n  }\n\n  .author {\n    margin-right: 5px;\n    font-weight: bold;\n  }\n\n  .date {\n    margin-right: 10px;\n    font-size: 11px;\n    color: #a7a7a7;\n    padding-top: 4px;\n  }\n\n  .content {\n    float: right;\n    margin-right: 20px;\n    color: #a6aab2;\n    background: #1a233b;\n    padding: 8px;\n    border-radius: 10px;\n    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2), 0 3px 4px 0 rgba(0, 0, 0, 0.19);\n    max-width: 500px;\n  }\n`;\n\nfunction formatDate(seconds) {\n  let formattedDate = \"\";\n\n  if (seconds) {\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\n\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n\n  return formattedDate;\n}\n\nexport default function Message({\n  uid,\n  text,\n  displayName,\n  createdAt,\n  photoURL,\n}) {\n  const { user } = React.useContext(AuthContext);\n\n  // return (\n  //   <WrapperStyled>\n  //     <div>\n  //       <Avatar size=\"small\" src={photoURL}>\n  //         {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n  //       </Avatar>\n  //       <Typography.Text className=\"author\">{displayName}</Typography.Text>\n  //       <Typography.Text className=\"date\">\n  //         {formatDate(createdAt?.seconds)}\n  //       </Typography.Text>\n  //     </div>\n  //     <div>\n  //       <Typography.Text className=\"content\">{text}</Typography.Text>\n  //     </div>\n  //   </WrapperStyled>\n  // );\n\n  return user.uid === uid ? (\n    <CurrentUserWrapperStyled>\n      <div>\n        <div className=\"messages-container\">\n          <Typography.Text className=\"date\">\n            {formatDate(createdAt?.seconds)}\n          </Typography.Text>\n          <Typography.Text className=\"author\">{displayName}</Typography.Text>\n          <Avatar size=\"small\" src={photoURL}>\n            {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n          </Avatar>\n        </div>\n        <Typography.Text className=\"content\">\n          <span>{text}</span>\n        </Typography.Text>\n      </div>\n    </CurrentUserWrapperStyled>\n  ) : (\n    <WrapperStyled>\n      <div>\n        <Avatar size=\"small\" src={photoURL}>\n          {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n        </Avatar>\n        <Typography.Text className=\"author\">{displayName}</Typography.Text>\n        <Typography.Text className=\"date\">\n          {formatDate(createdAt?.seconds)}\n        </Typography.Text>\n      </div>\n      <div>\n        <Typography.Text className=\"content\">{text}</Typography.Text>\n      </div>\n    </WrapperStyled>\n  );\n}\n","import { /*UserAddOutlined,*/ SendOutlined } from \"@ant-design/icons\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Form, Input } from \"antd\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { addDocument } from \"../../firebase/services\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\n\nconst FormStyled = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px 2px 2px 0;\n  border: 1px solid #cccccc;\n  border-radius: 2px;\n\n  .ant-form-item {\n    flex: 1;\n    margin-bottom: 0;\n  }\n`;\n\nexport default function ChatWindow() {\n  const { selectedRoom } = useContext(AppContext);\n  const {\n    user: { uid, photoURL, displayName },\n  } = useContext(AuthContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [form] = Form.useForm();\n  const inputRef = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleOnSubmit = () => {\n    if (inputValue) {\n      addDocument(\"messages\", {\n        text: inputValue,\n        uid,\n        photoURL,\n        roomId: selectedRoom.id,\n        displayName,\n      });\n\n      form.resetFields([\"message\"]);\n      setInputValue(\"\");\n    }\n\n    // focus to input again after submit\n    if (inputRef?.current) {\n      setTimeout(() => {\n        inputRef.current.focus();\n      });\n    }\n  };\n\n  return (\n    <FormStyled form={form}>\n      <Form.Item name=\"message\">\n        <Input\n          ref={inputRef}\n          onChange={handleInputChange}\n          onPressEnter={handleOnSubmit}\n          placeholder=\"Nhập tin nhắn...\"\n          bordered={false}\n          autoComplete=\"off\"\n        />\n      </Form.Item>\n      <Button\n        type=\"primary\"\n        icon={<SendOutlined />}\n        shape=\"circle\"\n        onClick={handleOnSubmit}\n      ></Button>\n    </FormStyled>\n  );\n}\n","import { /*UserAddOutlined,*/ SendOutlined } from \"@ant-design/icons\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Tooltip, Avatar, Form, Input, Alert } from \"antd\";\nimport Message from \"./Message\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { addDocument } from \"../../firebase/services\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport useFirestore from \"../../hooks/useFirestore\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport ChatInput from \"./ChatInput\";\n\nconst HeaderStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 57px;\n  padding: 0 16px;\n  align-items: center;\n\n  .header {\n    &__info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    &__title {\n      margin: 0;\n      font-weight: bold;\n    }\n\n    &__description {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst ButtonGroupStyled = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst WrapperStyled = styled.div`\n  height: 96vh;\n  margin-top: 2vh;\n  background: ${(props) => props.theme.colors.background};\n`;\n\nconst ContentStyled = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 11px;\n  background: ${(props) => props.theme.colors.backgroundPrimary};\n  border-radius: 25px;\n  justify-content: flex-end;\n`;\n\nconst FormStyled = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px 2px 2px 0;\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: 2px;\n\n  .ant-form-item {\n    flex: 1;\n    margin-bottom: 0;\n  }\n`;\n\nconst MessageListStyled = styled.div`\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nexport default function ChatWindow() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { selectedRoom, members /*, setIsInviteMemberVisible */ } =\n    useContext(AppContext);\n  const {\n    user: { uid, photoURL, displayName },\n  } = useContext(AuthContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [form] = Form.useForm();\n  const inputRef = useRef(null);\n  const messageListRef = useRef(null);\n  const el = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleOnSubmit = () => {\n    if (inputValue) {\n      addDocument(\"messages\", {\n        text: inputValue,\n        uid,\n        photoURL,\n        roomId: selectedRoom.id,\n        displayName,\n      });\n\n      form.resetFields([\"message\"]);\n      setInputValue(\"\");\n    }\n\n    // focus to input again after submit\n    if (inputRef?.current) {\n      setTimeout(() => {\n        inputRef.current.focus();\n      });\n    }\n  };\n\n  const condition = React.useMemo(\n    () => ({\n      fieldName: \"roomId\",\n      operator: \"==\",\n      compareValue: selectedRoom.id,\n    }),\n    [selectedRoom.id]\n  );\n\n  const messages = useFirestore(\"messages\", condition);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, [selectedRoom.id]);\n\n  useEffect(() => {\n    // scroll to bottom after message changed\n    if (messageListRef?.current) {\n      messageListRef.current.scrollTop =\n        messageListRef.current.scrollHeight + 50;\n      // messageListRef.current.scrollIntoView({\n      //   block: \"end\",\n      //   behavior: \"smooth\",\n      // });\n    }\n    setIsLoading(false);\n  }, [messages]);\n\n  useEffect(() => {\n    if (el?.current) el.current.scrollIntoView({ block: \"end\" });\n  });\n\n  return (\n    <WrapperStyled>\n      {selectedRoom.id ? (\n        <>\n          {/* <HeaderStyled>\n            <div className=\"header__info\">\n              <p className=\"header__title\">{selectedRoom.name}</p>\n              <span className=\"header__description\">\n                {selectedRoom.description}\n              </span>\n            </div>\n            <ButtonGroupStyled> */}\n          {/* <Button\n                icon={<UserAddOutlined />}\n                type=\"text\"\n                onClick={() => setIsInviteMemberVisible(true)}\n              >\n                Mời\n              </Button> */}\n          {/* <Avatar.Group size=\"small\" maxCount={2}>\n                {members.map((member) => (\n                  <Tooltip title={member.displayName} key={member.id}>\n                    <Avatar src={member.photoURL}>\n                      {member.photoURL\n                        ? \"\"\n                        : member.displayName?.charAt(0)?.toUpperCase()}\n                    </Avatar>\n                  </Tooltip>\n                ))}\n              </Avatar.Group>\n            </ButtonGroupStyled>\n          </HeaderStyled> */}\n          {isLoading ? (\n            <Spin\n              size=\"large\"\n              tip=\"Loading...\"\n              style={{ position: \"fixed\", bottom: \"50%\", left: \"50%\" }}\n              indicator={<LoadingOutlined style={{ fontSize: 40 }} spin />}\n            />\n          ) : (\n            <ContentStyled>\n              <MessageListStyled ref={messageListRef}>\n                {messages.length ? (\n                  messages.map((mes) => (\n                    <Message\n                      key={mes.id}\n                      uid={mes.uid}\n                      text={mes.text}\n                      photoURL={mes.photoURL}\n                      displayName={mes.displayName}\n                      createdAt={mes.createdAt}\n                    />\n                  ))\n                ) : (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      bottom: \"50%\",\n                      left: \"50%\",\n                      transform: `translate(-50%, 50%)`,\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <MessageOutlined\n                      style={{\n                        fontSize: \"90px\",\n                        color: \"#cccccc\",\n                      }}\n                    />\n                    <span\n                      style={{\n                        fontSize: \"28px\",\n                        color: \"#99999999\",\n                        fontWeight: \"500\",\n                      }}\n                    >\n                      Chat now!\n                    </span>\n                  </div>\n                )}\n                <div ref={el} id={\"el\"}></div>\n              </MessageListStyled>\n              {/* <FormStyled form={form}>\n                <Form.Item name=\"message\">\n                  <Input\n                    ref={inputRef}\n                    onChange={handleInputChange}\n                    onPressEnter={handleOnSubmit}\n                    placeholder=\"Nhập tin nhắn...\"\n                    bordered={false}\n                    autoComplete=\"off\"\n                  />\n                </Form.Item>\n                <Button\n                  type=\"primary\"\n                  icon={<SendOutlined />}\n                  shape=\"circle\"\n                  onClick={handleOnSubmit}\n                ></Button>\n              </FormStyled> */}\n              <ChatInput />\n            </ContentStyled>\n          )}\n        </>\n      ) : (\n        <Alert\n          message=\"Hãy chọn phòng\"\n          type=\"info\"\n          showIcon\n          style={{ margin: 5 }}\n          closable\n        />\n      )}\n    </WrapperStyled>\n  );\n}\n","import {\n  UserAddOutlined,\n  UsergroupAddOutlined,\n  LogoutOutlined,\n  FileImageOutlined,\n} from \"@ant-design/icons\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  deleteDocument,\n  deleteDocumentWhere,\n  updateDocument,\n} from \"../../firebase/services\";\nimport { Button, Tooltip, Avatar, Alert } from \"antd\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\n\nexport default function RoomInfo() {\n  const {\n    selectedRoom,\n    members,\n    setIsInviteMemberVisible,\n    setIsMemberListVisible,\n  } = useContext(AppContext);\n  const { user } = useContext(AuthContext);\n\n  const handleDeleteRoom = () => {\n    const condition = {\n      fieldName: \"roomId\",\n      operator: \"==\",\n      compareValue: selectedRoom.id,\n    };\n\n    deleteDocument(\"rooms\", selectedRoom.id);\n    deleteDocumentWhere(\"messages\", condition);\n  };\n\n  const handleLeaveRoom = () => {\n    if (selectedRoom?.members.length >= 2) {\n      const tmpRoom = JSON.parse(JSON.stringify(selectedRoom));\n      tmpRoom.members.shift();\n      console.log(selectedRoom);\n      console.log(tmpRoom);\n      updateDocument(\"rooms\", selectedRoom, tmpRoom);\n    } else {\n      handleDeleteRoom();\n    }\n  };\n\n  return (\n    <WrapperStyled>\n      {selectedRoom.id ? (\n        <>\n          <HeaderStyled>\n            <GroupInfo>\n              <Avatar.Group size=\"large\" maxCount={2} className=\"avatar\">\n                {members.map((member) => (\n                  <Tooltip title={member.displayName} key={member.id}>\n                    <Avatar src={member.photoURL}>\n                      {member.photoURL\n                        ? \"\"\n                        : member.displayName?.charAt(0)?.toUpperCase()}\n                    </Avatar>\n                  </Tooltip>\n                ))}\n              </Avatar.Group>\n\n              <div className=\"header__info\">\n                <p className=\"header__title\">{selectedRoom.name}</p>\n                <span className=\"header__description\">\n                  {selectedRoom.description}\n                </span>\n              </div>\n            </GroupInfo>\n            <ButtonGroupStyled>\n              <Button\n                icon={<UserAddOutlined />}\n                type=\"text\"\n                onClick={() => setIsInviteMemberVisible(true)}\n                block\n              >\n                Mời\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button\n                icon={<UsergroupAddOutlined />}\n                onClick={() => {\n                  setIsMemberListVisible(true);\n                }}\n                type=\"text\"\n                block\n              >\n                Thanh vien trong nhom\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button icon={<FileImageOutlined />} type=\"text\" block>\n                Thay doi anh nhom\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button\n                icon={<LogoutOutlined />}\n                onClick={handleLeaveRoom}\n                type=\"text\"\n                block\n              >\n                Roi nhom\n              </Button>\n            </ButtonGroupStyled>\n            {members.slice(-1)[0]?.uid === user.uid ? (\n              <ButtonGroupStyled>\n                <Button\n                  onClick={handleDeleteRoom}\n                  icon={<LogoutOutlined />}\n                  type=\"text\"\n                  block\n                >\n                  Xoa nhom\n                </Button>\n              </ButtonGroupStyled>\n            ) : null}\n          </HeaderStyled>\n        </>\n      ) : (\n        <Alert\n          message=\"Hãy chọn phòng\"\n          type=\"info\"\n          showIcon\n          style={{ margin: 5 }}\n          closable\n        />\n      )}\n    </WrapperStyled>\n  );\n}\n\nconst HeaderStyled = styled.div`\n  text-align: center;\n\n  .avatar {\n    margin-top: 10%;\n  }\n  .header__info {\n    margin-bottom: 30px;\n  }\n  .header__title {\n    font-size: 24px;\n    font-weight: 600;\n  }\n  .header__description {\n    font-size: 15px;\n    font-weight: 500;\n    word-wrap: break-word;\n    margin: 5px;\n  }\n`;\n\nconst ButtonGroupStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nconst WrapperStyled = styled.div`\n  height: 100vh;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nconst GroupInfo = styled.div`\n  background: ${(props) => props.theme.colors.backgroundPrimary};\n  margin: 20px;\n  padding-bottom: 5px;\n  border-radius: 25px;\n  border: 1px solid ${(props) => props.theme.colors.border};\n`;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport Sidebar from \"./Sidebar\";\nimport ChatWindow from \"./ChatWindow\";\nimport RoomInfo from \"./RoomInfo\";\n\nexport default function ChatRoom() {\n  return (\n    <div>\n      <Row>\n        <Col span={5}>\n          <Sidebar />\n        </Col>\n        <Col span={14}>\n          <ChatWindow />\n        </Col>\n        <Col span={5}>\n          <RoomInfo />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\n\nexport default function AddRoomModal() {\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\n  const {\n    user: { uid },\n  } = useContext(AuthContext);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // handle logic\n    // add new room to firestore\n    addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\n\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Tạo phòng'\n        visible={isAddRoomVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form form={form} layout='vertical'>\n          <Form.Item label='Tên phòng' name='name'>\n            <Input placeholder='Nhập tên phòng' />\n          </Form.Item>\n          <Form.Item label='Mô tả' name='description'>\n            <Input.TextArea placeholder='Nhập mô tả' />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { debounce } from 'lodash';\nimport { db } from '../../firebase/config';\n\nfunction DebounceSelect({\n  fetchOptions,\n  debounceTimeout = 300,\n  curMembers,\n  ...props\n}) {\n  // Search: abcddassdfasdf\n\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n\n      fetchOptions(value, curMembers).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [debounceTimeout, fetchOptions, curMembers]);\n\n  React.useEffect(() => {\n    return () => {\n      // clear when unmount\n      setOptions([]);\n    };\n  }, []);\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size='small' /> : null}\n      {...props}\n    >\n      {options.map((opt) => (\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\n          <Avatar size='small' src={opt.photoURL}>\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\n          </Avatar>\n          {` ${opt.label}`}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nasync function fetchUserList(search, curMembers) {\n  return db\n    .collection('users')\n    .where('keywords', 'array-contains', search?.toLowerCase())\n    .orderBy('displayName')\n    .limit(20)\n    .get()\n    .then((snapshot) => {\n      return snapshot.docs\n        .map((doc) => ({\n          label: doc.data().displayName,\n          value: doc.data().uid,\n          photoURL: doc.data().photoURL,\n        }))\n        .filter((opt) => !curMembers.includes(opt.value));\n    });\n}\n\nexport default function InviteMemberModal() {\n  const {\n    isInviteMemberVisible,\n    setIsInviteMemberVisible,\n    selectedRoomId,\n    selectedRoom,\n  } = useContext(AppContext);\n  const [value, setValue] = useState([]);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    // update members in current room\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\n\n    roomRef.update({\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\n    });\n\n    setIsInviteMemberVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Mời thêm thành viên'\n        visible={isInviteMemberVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n      >\n        <Form form={form} layout='vertical'>\n          <DebounceSelect\n            mode='multiple'\n            name='search-user'\n            label='Tên các thành viên'\n            value={value}\n            placeholder='Nhập tên thành viên'\n            fetchOptions={fetchUserList}\n            onChange={(newValue) => setValue(newValue)}\n            style={{ width: '100%' }}\n            curMembers={selectedRoom.members}\n          />\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: { name: \"ha\" },\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state = action.user;\n    },\n    removeUser: (state, action) => {\n      state = {};\n    },\n  },\n});\n\n//Export selector\nexport const userSelector = (state) => state.user;\n//Export action\nexport const { getUser, removeUser, setUser } = authSlice.actions;\n//Export reducer\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import { combineReducer } from \"redux\";\nimport AuthSlice from \"./Reducer/AuthSlice\";\n\nconst store = configureStore({ reducer: AuthSlice });\n\nexport default store;\n","import React, { useContext } from \"react\";\nimport { Modal, Button, Avatar } from \"antd\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\n\nexport default function MemberListModal() {\n  const { members, isMemberListVisible, setIsMemberListVisible } =\n    useContext(AppContext);\n  const { user } = useContext(AuthContext);\n\n  // console.log(members);\n\n  const handleOk = () => {\n    setIsMemberListVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsMemberListVisible(false);\n  };\n\n  const handleDeleteUser = (id) => {\n    // console.log(id);\n  };\n\n  return (\n    <>\n      <Modal\n        title=\"Basic Modal\"\n        visible={isMemberListVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <div>\n          {members.map((member) => (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                marginBottom: \"10px\",\n              }}\n              key={member.uid}\n              value={member.uid}\n              title={member.displayName}\n            >\n              <div>\n                <Avatar size=\"small\" src={member.photoURL}>\n                  {member.photoURL\n                    ? \"\"\n                    : member.displayName?.charAt(0)?.toUpperCase()}\n                </Avatar>\n                {` ${member.displayName}`}\n              </div>\n              {user.uid !== member.uid ? (\n                <Button onClick={handleDeleteUser.bind(this, member.uid)}>\n                  Delete\n                </Button>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport const ThemeContext = React.createContext();\n\nexport const colorScheme = {\n  light: {\n    colors: {\n      primary: \"#014cfc\",\n      secondary: \"#36c9b2\",\n      black: \"#1a233b\",\n      white: \"#f3f6fb\",\n      yellow: \"#ffc951\",\n      red: \"#ff5858\",\n      tomato: \"#ff8464\",\n      purple: \"#7563c4\",\n      textPrimary: \"#152d43\",\n      textSecondary: \"#9fa4b1\",\n      border: \"#d4e1ff\",\n      background: \"#ffffff\",\n      backgroundPrimary: \"#e6edf4\",\n    },\n    opacity: {\n      primary: 0.6,\n      secondary: 0.3,\n    },\n  },\n  dark: {\n    colors: {\n      primary: \"#014cfc\",\n      secondary: \"#36c9b2\",\n      black: \"#1a233b\",\n      white: \"#ccc8c1\",\n      yellow: \"#ffc951\",\n      red: \"#ff5858\",\n      tomato: \"#ff8464\",\n      purple: \"#7563c4\",\n      textPrimary: \"#152d43\",\n      textSecondary: \"#9fa4b1\",\n      border: \"#222526\",\n      background: \"#181a1b\",\n      backgroundPrimary: \"#222526\",\n    },\n    opacity: {\n      primary: 0.6,\n      secondary: 0.3,\n    },\n  },\n};\n\n// export default function ThemeProvider({ children }) {\n//   const [theme, setTheme] = useState(\"light\");\n\n//   const getColorScheme = () => {\n//     return colorScheme[theme];\n//   };\n\n//   const setLightTheme = () => {\n//     setTheme(\"light\");\n//   };\n\n//   const setDarkTheme = () => {\n//     setTheme(\"dark\");\n//   };\n\n//   return (\n//     <ThemeContext.Provider\n//       value={{ theme, setLightTheme, setDarkTheme, getColorScheme }}\n//     >\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// }\n","import React from \"react\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function PrivateRoute({component, path, exac}) {\n  const { user } = React.useContext(AuthContext);\n  console.log(component)\n\n  return user?.uid ? <Route component={component} path={path} exact={exac}/> : <Redirect to=\"/react_chat-app/login\"  />;\n}\n","import \"./App.css\";\nimport Login from \"./components/Login\";\nimport {\n  Route,\n  Switch,\n  BrowserRouter,\n  Redirect,\n  HashRouter,\n} from \"react-router-dom\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport AuthProvider from \"./Context/AuthProvider\";\nimport AppProvider from \"./Context/AppProvider\";\nimport AddRoomModal from \"./components/Modals/AddRoomModal\";\nimport InviteMemberModal from \"./components/Modals/InviteMemberModal\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport MemberListModal from \"./components/Modals/MemberListModal\";\n// import ThemeProvider from \"./Context/ThemeProvider\";\nimport { useState, useContext } from \"react\";\nimport { colorScheme, ThemeContext } from \"./Context/ThemeProvider\";\nimport { AuthContext } from \"./Context/AuthProvider\";\nimport { ThemeProvider } from \"styled-components\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nfunction ThemeBtn({ theme, setTheme }) {\n  const handleClick = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n  return <button onClick={handleClick}>Change theme</button>;\n}\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  // const { user } = useContext(AuthContext);\n\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <AuthProvider>\n          <AppProvider>\n            {/* <ThemeContext.Provider value={colorScheme[theme]}> */}\n            <ThemeProvider theme={colorScheme[theme]}>\n              <>\n                <ThemeBtn theme={theme} setTheme={setTheme} />\n                <Switch>\n                  <Route component={Login} path=\"/react_chat-app/login\" />\n                  <PrivateRoute\n                    component={ChatRoom}\n                    path=\"/react_chat-app\"\n                    exact\n                  />\n                  {/* <Route path=\"/\">\n                    <Redirect to=\"/react_chat-app\" />\n                  </Route> */}\n                  <Route path=\"*\">\n                    <Redirect to=\"/react_chat-app\" />\n                  </Route>\n                </Switch>\n                <AddRoomModal />\n                <InviteMemberModal />\n                <MemberListModal />\n              </>\n              {/* </ThemeContext.Provider> */}\n            </ThemeProvider>\n          </AppProvider>\n        </AuthProvider>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import styled, { ThemeProvider } from \"styled-components\";\nimport { colorScheme } from \"../constants/theme\";\n\n// Define our button, but with the use of props.theme this time\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${(props) => props.theme.primary};\n  border: 2px solid ${(props) => props.theme.primary};\n`;\n\n// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\n// Button.defaultProps = {\n//   theme: {\n//     main: \"palevioletred\",\n//   },\n// };\n\n// Define what props.theme will look like\nconst theme = {\n  main: \"mediumseagreen\",\n};\nexport default function StyledBtn() {\n  return (\n    <div>\n      <Button>Normal</Button>\n\n      <ThemeProvider theme={colorScheme.light}>\n        <Button>Themed</Button>\n      </ThemeProvider>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport StyledBtn from \"./components/StyledBtn\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}