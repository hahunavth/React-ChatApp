{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","Store/Reducer/AuthSlice.js","Context/AuthProvider.js","hooks/useFirestore.js","Context/AppProvider.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/Sidebar.js","components/ChatRoom/Message.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/RoomInfo.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","Store/index.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","window","location","hostname","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","fbProvider","FacebookAuthProvider","googleProvider","GoogleAuthProvider","Login","handleLogin","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keywords","toLowerCase","justify","style","height","span","textAlign","level","width","marginBottom","onClick","authSlice","createSlice","initialState","reducers","setUser","state","action","removeUser","actions","getUser","AuthContext","React","createContext","AuthProvider","children","useDispatch","useState","history","useHistory","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","Provider","value","position","inset","useFirestore","condition","documents","setDocuments","collectionRef","orderBy","compareValue","where","fieldName","operator","onSnapshot","snapshot","docs","map","doc","id","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","isInviteMemberVisible","setIsInviteMemberVisible","selectedRoomId","setSelectedRoomId","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","usersCondition","members","clearState","WrapperStyled","styled","div","UserInfo","src","charAt","toUpperCase","Text","className","color","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","RoomList","defaultActiveKey","header","type","icon","PlusSquareOutlined","SidebarStyled","Sidebar","CurrentUserWrapperStyled","formatDate","seconds","formattedDate","formatRelative","Date","slice","Message","text","console","log","size","HeaderStyled","ButtonGroupStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","useForm","form","inputRef","useRef","messageListRef","handleOnSubmit","roomId","resetFields","current","setTimeout","focus","messages","scrollTop","scrollHeight","description","UserAddOutlined","Group","maxCount","member","title","ref","mes","Item","onChange","e","target","onPressEnter","placeholder","bordered","autoComplete","message","showIcon","margin","closable","RoomInfo","block","UsergroupAddOutlined","FileImageOutlined","LogoutOutlined","ChatRoom","AddRoomModal","visible","onOk","getFieldsValue","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","curMembers","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","includes","InviteMemberModal","setValue","update","val","destroyOnClose","mode","newValue","store","configureStore","reducer","AuthSlice","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4db373ae.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  // apiKey: 'AIzaSyBRpDZ63mVfrzmzTjHFjRssP4cOvw_jc04',\n  // authDomain: 'chat-app-c975a.firebaseapp.com',\n  // projectId: 'chat-app-c975a',\n  // storageBucket: 'chat-app-c975a.appspot.com',\n  // messagingSenderId: '942648297216',\n  // appId: '1:942648297216:web:d8c4321ba778c8808f95e5',\n  // measurementId: 'G-01WLMKYFFM',\n\n  apiKey: \"AIzaSyBMckRZQtEsbti4To5Nrf-ZoGOpA2MROEM\",\n  authDomain: \"chat-app-67a8b.firebaseapp.com\",\n  databaseURL:\n    \"https://chat-app-67a8b-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"chat-app-67a8b\",\n  storageBucket: \"chat-app-67a8b.appspot.com\",\n  messagingSenderId: \"550759354703\",\n  appId: \"1:550759354703:web:e08640596dccf3b917f53a\",\n  measurementId: \"G-PL5J35GXWF\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nif (window.location.hostname === \"localhost\") {\n  // auth.useEmulator('http://localhost:9099');\n  // db.useEmulator('localhost', '8080');\n}\n\nexport { db, auth };\nexport default firebase;\n","import firebase, { db } from \"./config\";\n\nexport const addDocument = (collection, data) => {\n  const query = db.collection(collection);\n\n  query.add({\n    ...data,\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n  });\n};\n\n// tao keywords cho displayName, su dung cho search\nexport const generateKeywords = (displayName) => {\n  // liet ke tat cac hoan vi. vd: name = [\"David\", \"Van\", \"Teo\"]\n  // => [\"David\", \"Van\", \"Teo\"], [\"David\", \"Teo\", \"Van\"], [\"Teo\", \"David\", \"Van\"],...\n  const name = displayName.split(\" \").filter((word) => word);\n\n  const length = name.length;\n  let flagArray = [];\n  let result = [];\n  let stringArray = [];\n\n  /**\n   * khoi tao mang flag false\n   * dung de danh dau xem gia tri\n   * tai vi tri nay da duoc su dung\n   * hay chua\n   **/\n  for (let i = 0; i < length; i++) {\n    flagArray[i] = false;\n  }\n\n  const createKeywords = (name) => {\n    const arrName = [];\n    let curName = \"\";\n    name.split(\"\").forEach((letter) => {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  };\n\n  function findPermutation(k) {\n    for (let i = 0; i < length; i++) {\n      if (!flagArray[i]) {\n        flagArray[i] = true;\n        result[k] = name[i];\n\n        if (k === length - 1) {\n          stringArray.push(result.join(\" \"));\n        }\n\n        findPermutation(k + 1);\n        flagArray[i] = false;\n      }\n    }\n  }\n\n  findPermutation(0);\n\n  const keywords = stringArray.reduce((acc, cur) => {\n    const words = createKeywords(cur);\n    return [...acc, ...words];\n  }, []);\n\n  return keywords;\n};\n","import React from \"react\";\nimport { Row, Col, Button, Typography } from \"antd\";\nimport firebase, { auth } from \"../../firebase/config\";\nimport { addDocument, generateKeywords } from \"../../firebase/services\";\n\nconst { Title } = Typography;\n\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport default function Login() {\n  const handleLogin = async (provider) => {\n    const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\n\n    if (additionalUserInfo?.isNewUser) {\n      addDocument(\"users\", {\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL,\n        uid: user.uid,\n        providerId: additionalUserInfo.providerId,\n        keywords: generateKeywords(user.displayName?.toLowerCase()),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Row justify=\"center\" style={{ height: 800 }}>\n        <Col span={8}>\n          <Title style={{ textAlign: \"center\" }} level={3}>\n            Fun Chat\n          </Title>\n          <Button\n            style={{ width: \"100%\", marginBottom: 5 }}\n            onClick={() => handleLogin(googleProvider)}\n          >\n            Đăng nhập bằng Google\n          </Button>\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => handleLogin(fbProvider)}\n          >\n            Đăng nhập bằng Facebook\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: { name: \"ha\" },\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state = action.user;\n    },\n    removeUser: (state, action) => {\n      state = {};\n    },\n  },\n});\n\n//Export selector\nexport const userSelector = (state) => state.user;\n//Export action\nexport const { getUser, removeUser, setUser } = authSlice.actions;\n//Export reducer\nexport default authSlice.reducer;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth } from \"../firebase/config\";\nimport { Spin } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser, removeUser, userSelector } from \"../Store/Reducer/AuthSlice\";\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider({ children }) {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n\n  React.useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged((user) => {\n      if (user) {\n        const { displayName, email, uid, photoURL } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL,\n        });\n        // dispatch(\n        //   setUser({\n        //     displayName,\n        //     email,\n        //     uid,\n        //     photoURL,\n        //   })\n        // );\n        setIsLoading(false);\n        history.push(\"/\");\n        return;\n      }\n\n      // reset user info\n      setUser({});\n      setIsLoading(false);\n      history.push(\"/login\");\n    });\n\n    // clean function\n    return () => {\n      unsubscibed();\n    };\n  }, [history]);\n\n  return (\n    <AuthContext.Provider value={{ user }}>\n      {isLoading ? <Spin style={{ position: \"fixed\", inset: 0 }} /> : children}\n    </AuthContext.Provider>\n  );\n}\n","import React, { useState } from 'react';\nimport { db } from '../firebase/config';\n\nconst useFirestore = (collection, condition) => {\n  const [documents, setDocuments] = useState([]);\n\n  React.useEffect(() => {\n    let collectionRef = db.collection(collection).orderBy('createdAt');\n    if (condition) {\n      if (!condition.compareValue || !condition.compareValue.length) {\n        // reset documents data\n        setDocuments([]);\n        return;\n      }\n\n      collectionRef = collectionRef.where(\n        condition.fieldName,\n        condition.operator,\n        condition.compareValue\n      );\n    }\n\n    const unsubscribe = collectionRef.onSnapshot((snapshot) => {\n      const documents = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      setDocuments(documents);\n    });\n\n    return unsubscribe;\n  }, [collection, condition]);\n\n  return documents;\n};\n\nexport default useFirestore;\n","import React, { useState } from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { AuthContext } from './AuthProvider';\n\nexport const AppContext = React.createContext();\n\nexport default function AppProvider({ children }) {\n  const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\n  const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\n  const [selectedRoomId, setSelectedRoomId] = useState('');\n\n  const {\n    user: { uid },\n  } = React.useContext(AuthContext);\n\n  const roomsCondition = React.useMemo(() => {\n    return {\n      fieldName: 'members',\n      operator: 'array-contains',\n      compareValue: uid,\n    };\n  }, [uid]);\n\n  const rooms = useFirestore('rooms', roomsCondition);\n\n  const selectedRoom = React.useMemo(\n    () => rooms.find((room) => room.id === selectedRoomId) || {},\n    [rooms, selectedRoomId]\n  );\n\n  const usersCondition = React.useMemo(() => {\n    return {\n      fieldName: 'uid',\n      operator: 'in',\n      compareValue: selectedRoom.members,\n    };\n  }, [selectedRoom.members]);\n\n  const members = useFirestore('users', usersCondition);\n\n  const clearState = () => {\n    setSelectedRoomId('');\n    setIsAddRoomVisible(false);\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        rooms,\n        members,\n        selectedRoom,\n        isAddRoomVisible,\n        setIsAddRoomVisible,\n        selectedRoomId,\n        setSelectedRoomId,\n        isInviteMemberVisible,\n        setIsInviteMemberVisible,\n        clearState,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Button, Avatar, Typography } from \"antd\";\nimport styled from \"styled-components\";\n\nimport { auth } from \"../../firebase/config\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport { AppContext } from \"../../Context/AppProvider\";\n\nconst WrapperStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid rgba(82, 38, 83);\n\n  .username {\n    color: black;\n    margin-left: 5px;\n  }\n`;\n\nexport default function UserInfo() {\n  const {\n    user: { displayName, photoURL },\n  } = React.useContext(AuthContext);\n  const { clearState } = React.useContext(AppContext);\n\n  return (\n    <WrapperStyled>\n      <div>\n        <Avatar src={photoURL}>\n          {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n        </Avatar>\n        <Typography.Text className=\"username\">{displayName}</Typography.Text>\n      </div>\n      <Button\n        style={{ color: \"black\" }}\n        ghost\n        onClick={() => {\n          // clear state in App Provider when logout\n          clearState();\n          auth.signOut();\n        }}\n      >\n        Đăng xuất\n      </Button>\n    </WrapperStyled>\n  );\n}\n","import React from \"react\";\nimport { Collapse, Typography, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport { AppContext } from \"../../Context/AppProvider\";\n\nconst { Panel } = Collapse;\n\nconst PanelStyled = styled(Panel)`\n  &&& {\n    .ant-collapse-header,\n    p {\n      color: black;\n    }\n\n    .ant-collapse-content-box {\n      padding: 0 40px;\n    }\n\n    .add-room {\n      color: black;\n      padding: 0;\n    }\n  }\n`;\n\nconst LinkStyled = styled(Typography.Link)`\n  display: block;\n  margin-bottom: 5px;\n  color: white;\n`;\n\nexport default function RoomList() {\n  const { rooms, setIsAddRoomVisible, setSelectedRoomId } =\n    React.useContext(AppContext);\n\n  const handleAddRoom = () => {\n    setIsAddRoomVisible(true);\n  };\n\n  return (\n    <Collapse ghost defaultActiveKey={[\"1\"]}>\n      <PanelStyled header=\"Danh sách các phòng\" key=\"1\">\n        {rooms.map((room) => (\n          <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}>\n            {room.name}\n          </LinkStyled>\n        ))}\n        <Button\n          type=\"text\"\n          icon={<PlusSquareOutlined />}\n          className=\"add-room\"\n          onClick={handleAddRoom}\n        >\n          Thêm phòng\n        </Button>\n      </PanelStyled>\n    </Collapse>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport UserInfo from \"./UserInfo\";\nimport RoomList from \"./RoomList\";\nimport styled from \"styled-components\";\n\nconst SidebarStyled = styled.div`\n  height: 100vh;\n  border-right: 1px solid black;\n`;\n\nexport default function Sidebar() {\n  return (\n    <SidebarStyled>\n      <Row>\n        <Col span={24}>\n          <UserInfo />\n        </Col>\n        <Col span={24}>\n          <RoomList />\n        </Col>\n      </Row>\n    </SidebarStyled>\n  );\n}\n","import React from \"react\";\nimport { Avatar, Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport { formatRelative } from \"date-fns/esm\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\n\nconst WrapperStyled = styled.div`\n  margin-bottom: 30px;\n  padding-left: 20px;\n\n  .author {\n    margin-left: 5px;\n    font-weight: bold;\n  }\n\n  .date {\n    margin-left: 10px;\n    font-size: 11px;\n    color: #a7a7a7;\n  }\n\n  .content {\n    margin-left: 30px;\n  }\n`;\n\nconst CurrentUserWrapperStyled = styled.div`\n  margin-bottom: 30px;\n  padding-right: 20px;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: space-between;\n\n  .author {\n    margin-right: 5px;\n    font-weight: bold;\n  }\n\n  .date {\n    margin-right: 10px;\n    font-size: 11px;\n    color: #a7a7a7;\n  }\n\n  .content {\n    float: right;\n    margin-right: 30px;\n  }\n`;\n\nfunction formatDate(seconds) {\n  let formattedDate = \"\";\n\n  if (seconds) {\n    formattedDate = formatRelative(new Date(seconds * 1000), new Date());\n\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n\n  return formattedDate;\n}\n\nexport default function Message({\n  uid,\n  text,\n  displayName,\n  createdAt,\n  photoURL,\n}) {\n  const { user } = React.useContext(AuthContext);\n  console.log(user);\n  console.log(uid);\n  console.log(uid === user.uid);\n\n  // return (\n  //   <WrapperStyled>\n  //     <div>\n  //       <Avatar size=\"small\" src={photoURL}>\n  //         {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n  //       </Avatar>\n  //       <Typography.Text className=\"author\">{displayName}</Typography.Text>\n  //       <Typography.Text className=\"date\">\n  //         {formatDate(createdAt?.seconds)}\n  //       </Typography.Text>\n  //     </div>\n  //     <div>\n  //       <Typography.Text className=\"content\">{text}</Typography.Text>\n  //     </div>\n  //   </WrapperStyled>\n  // );\n\n  return user.uid === uid ? (\n    <CurrentUserWrapperStyled>\n      <div>\n        <div>\n          <Typography.Text className=\"date\">\n            {formatDate(createdAt?.seconds)}\n          </Typography.Text>\n          <Typography.Text className=\"author\">{displayName}</Typography.Text>\n          <Avatar size=\"small\" src={photoURL}>\n            {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n          </Avatar>\n        </div>\n        <div>\n          <Typography.Text className=\"content\">{text}</Typography.Text>\n        </div>\n      </div>\n    </CurrentUserWrapperStyled>\n  ) : (\n    <WrapperStyled>\n      <div>\n        <Avatar size=\"small\" src={photoURL}>\n          {photoURL ? \"\" : displayName?.charAt(0)?.toUpperCase()}\n        </Avatar>\n        <Typography.Text className=\"author\">{displayName}</Typography.Text>\n        <Typography.Text className=\"date\">\n          {formatDate(createdAt?.seconds)}\n        </Typography.Text>\n      </div>\n      <div>\n        <Typography.Text className=\"content\">{text}</Typography.Text>\n      </div>\n    </WrapperStyled>\n  );\n}\n","import { UserAddOutlined } from \"@ant-design/icons\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Tooltip, Avatar, Form, Input, Alert } from \"antd\";\nimport Message from \"./Message\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { addDocument } from \"../../firebase/services\";\nimport { AuthContext } from \"../../Context/AuthProvider\";\nimport useFirestore from \"../../hooks/useFirestore\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setUser,\n  removeUser,\n  userSelector,\n} from \"../../Store/Reducer/AuthSlice\";\n\nconst HeaderStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 56px;\n  padding: 0 16px;\n  align-items: center;\n  border-bottom: 1px solid rgb(230, 230, 230);\n\n  .header {\n    &__info {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    &__title {\n      margin: 0;\n      font-weight: bold;\n    }\n\n    &__description {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst ButtonGroupStyled = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst WrapperStyled = styled.div`\n  height: 100vh;\n`;\n\nconst ContentStyled = styled.div`\n  height: calc(100% - 56px);\n  display: flex;\n  flex-direction: column;\n  padding: 11px;\n  justify-content: flex-end;\n`;\n\nconst FormStyled = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2px 2px 2px 0;\n  border: 1px solid rgb(230, 230, 230);\n  border-radius: 2px;\n\n  .ant-form-item {\n    flex: 1;\n    margin-bottom: 0;\n  }\n`;\n\nconst MessageListStyled = styled.div`\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nexport default function ChatWindow() {\n  // const dispatch = useDispatch();\n  // const currnetUser = useSelector(userSelector);\n  // console.log(currnetUser);\n\n  const { selectedRoom, members, setIsInviteMemberVisible } =\n    useContext(AppContext);\n  const {\n    user: { uid, photoURL, displayName },\n  } = useContext(AuthContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [form] = Form.useForm();\n  const inputRef = useRef(null);\n  const messageListRef = useRef(null);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleOnSubmit = () => {\n    addDocument(\"messages\", {\n      text: inputValue,\n      uid,\n      photoURL,\n      roomId: selectedRoom.id,\n      displayName,\n    });\n\n    form.resetFields([\"message\"]);\n\n    // focus to input again after submit\n    if (inputRef?.current) {\n      setTimeout(() => {\n        inputRef.current.focus();\n      });\n    }\n  };\n\n  const condition = React.useMemo(\n    () => ({\n      fieldName: \"roomId\",\n      operator: \"==\",\n      compareValue: selectedRoom.id,\n    }),\n    [selectedRoom.id]\n  );\n\n  const messages = useFirestore(\"messages\", condition);\n\n  useEffect(() => {\n    // scroll to bottom after message changed\n    if (messageListRef?.current) {\n      messageListRef.current.scrollTop =\n        messageListRef.current.scrollHeight + 50;\n    }\n  }, [messages]);\n\n  return (\n    <WrapperStyled>\n      {selectedRoom.id ? (\n        <>\n          <HeaderStyled>\n            <div className=\"header__info\">\n              <p className=\"header__title\">{selectedRoom.name}</p>\n              <span className=\"header__description\">\n                {selectedRoom.description}\n              </span>\n            </div>\n            <ButtonGroupStyled>\n              <Button\n                icon={<UserAddOutlined />}\n                type=\"text\"\n                onClick={() => setIsInviteMemberVisible(true)}\n              >\n                Mời\n              </Button>\n              <Avatar.Group size=\"small\" maxCount={2}>\n                {members.map((member) => (\n                  <Tooltip title={member.displayName} key={member.id}>\n                    <Avatar src={member.photoURL}>\n                      {member.photoURL\n                        ? \"\"\n                        : member.displayName?.charAt(0)?.toUpperCase()}\n                    </Avatar>\n                  </Tooltip>\n                ))}\n              </Avatar.Group>\n            </ButtonGroupStyled>\n          </HeaderStyled>\n          <ContentStyled>\n            <MessageListStyled ref={messageListRef}>\n              {messages.map((mes) => (\n                <Message\n                  key={mes.id}\n                  uid={mes.uid}\n                  text={mes.text}\n                  photoURL={mes.photoURL}\n                  displayName={mes.displayName}\n                  createdAt={mes.createdAt}\n                />\n              ))}\n            </MessageListStyled>\n            <FormStyled form={form}>\n              <Form.Item name=\"message\">\n                <Input\n                  ref={inputRef}\n                  onChange={handleInputChange}\n                  onPressEnter={handleOnSubmit}\n                  placeholder=\"Nhập tin nhắn...\"\n                  bordered={false}\n                  autoComplete=\"off\"\n                />\n              </Form.Item>\n              <Button type=\"primary\" onClick={handleOnSubmit}>\n                Gửi\n              </Button>\n            </FormStyled>\n          </ContentStyled>\n        </>\n      ) : (\n        <Alert\n          message=\"Hãy chọn phòng\"\n          type=\"info\"\n          showIcon\n          style={{ margin: 5 }}\n          closable\n        />\n      )}\n    </WrapperStyled>\n  );\n}\n","import {\n  UserAddOutlined,\n  UsergroupAddOutlined,\n  LogoutOutlined,\n  FileImageOutlined,\n} from \"@ant-design/icons\";\nimport React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Tooltip, Avatar, Form, Alert } from \"antd\";\nimport { AppContext } from \"../../Context/AppProvider\";\n\nexport default function RoomInfo() {\n  const { selectedRoom, members, setIsInviteMemberVisible } =\n    useContext(AppContext);\n\n  return (\n    <WrapperStyled>\n      {selectedRoom.id ? (\n        <>\n          <HeaderStyled>\n            <Avatar.Group size=\"large\" maxCount={2} className=\"avatar\">\n              {members.map((member) => (\n                <Tooltip title={member.displayName} key={member.id}>\n                  <Avatar src={member.photoURL}>\n                    {member.photoURL\n                      ? \"\"\n                      : member.displayName?.charAt(0)?.toUpperCase()}\n                  </Avatar>\n                </Tooltip>\n              ))}\n            </Avatar.Group>\n\n            <div className=\"header__info\">\n              <p className=\"header__title\">{selectedRoom.name}</p>\n              <span className=\"header__description\">\n                {selectedRoom.description}\n              </span>\n            </div>\n            <ButtonGroupStyled>\n              <Button\n                icon={<UserAddOutlined />}\n                type=\"text\"\n                onClick={() => setIsInviteMemberVisible(true)}\n                block\n              >\n                Mời\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button icon={<UsergroupAddOutlined />} type=\"text\" block>\n                Thanh vien trong nhom\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button icon={<FileImageOutlined />} type=\"text\" block>\n                Thay doi anh nhom\n              </Button>\n            </ButtonGroupStyled>\n            <ButtonGroupStyled>\n              <Button icon={<LogoutOutlined />} type=\"text\" block>\n                Roi nhom\n              </Button>\n            </ButtonGroupStyled>\n          </HeaderStyled>\n        </>\n      ) : (\n        <Alert\n          message=\"Hãy chọn phòng\"\n          type=\"info\"\n          showIcon\n          style={{ margin: 5 }}\n          closable\n        />\n      )}\n    </WrapperStyled>\n  );\n}\n\nconst HeaderStyled = styled.div`\n  text-align: center;\n\n  .avatar {\n    margin-top: 15%;\n  }\n  .header__info {\n    margin-bottom: 30px;\n  }\n  .header__title {\n    font-size: 24px;\n    font-weight: 600;\n  }\n  .header__description {\n    font-size: 18px;\n    font-weight: 500;\n    word-wrap: break-word;\n  }\n`;\n\nconst ButtonGroupStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nconst WrapperStyled = styled.div`\n  height: 100vh;\n`;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport Sidebar from \"./Sidebar\";\nimport ChatWindow from \"./ChatWindow\";\nimport RoomInfo from \"./RoomInfo\";\n\nexport default function ChatRoom() {\n  return (\n    <div>\n      <Row>\n        <Col span={6}>\n          <Sidebar />\n        </Col>\n        <Col span={12}>\n          <ChatWindow />\n        </Col>\n        <Col span={6}>\n          <RoomInfo />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\n\nexport default function AddRoomModal() {\n  const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\n  const {\n    user: { uid },\n  } = useContext(AuthContext);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // handle logic\n    // add new room to firestore\n    addDocument('rooms', { ...form.getFieldsValue(), members: [uid] });\n\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n\n    setIsAddRoomVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Tạo phòng'\n        visible={isAddRoomVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form form={form} layout='vertical'>\n          <Form.Item label='Tên phòng' name='name'>\n            <Input placeholder='Nhập tên phòng' />\n          </Form.Item>\n          <Form.Item label='Mô tả' name='description'>\n            <Input.TextArea placeholder='Nhập mô tả' />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { debounce } from 'lodash';\nimport { db } from '../../firebase/config';\n\nfunction DebounceSelect({\n  fetchOptions,\n  debounceTimeout = 300,\n  curMembers,\n  ...props\n}) {\n  // Search: abcddassdfasdf\n\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  const debounceFetcher = React.useMemo(() => {\n    const loadOptions = (value) => {\n      setOptions([]);\n      setFetching(true);\n\n      fetchOptions(value, curMembers).then((newOptions) => {\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, [debounceTimeout, fetchOptions, curMembers]);\n\n  React.useEffect(() => {\n    return () => {\n      // clear when unmount\n      setOptions([]);\n    };\n  }, []);\n\n  return (\n    <Select\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size='small' /> : null}\n      {...props}\n    >\n      {options.map((opt) => (\n        <Select.Option key={opt.value} value={opt.value} title={opt.label}>\n          <Avatar size='small' src={opt.photoURL}>\n            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\n          </Avatar>\n          {` ${opt.label}`}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n\nasync function fetchUserList(search, curMembers) {\n  return db\n    .collection('users')\n    .where('keywords', 'array-contains', search?.toLowerCase())\n    .orderBy('displayName')\n    .limit(20)\n    .get()\n    .then((snapshot) => {\n      return snapshot.docs\n        .map((doc) => ({\n          label: doc.data().displayName,\n          value: doc.data().uid,\n          photoURL: doc.data().photoURL,\n        }))\n        .filter((opt) => !curMembers.includes(opt.value));\n    });\n}\n\nexport default function InviteMemberModal() {\n  const {\n    isInviteMemberVisible,\n    setIsInviteMemberVisible,\n    selectedRoomId,\n    selectedRoom,\n  } = useContext(AppContext);\n  const [value, setValue] = useState([]);\n  const [form] = Form.useForm();\n\n  const handleOk = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    // update members in current room\n    const roomRef = db.collection('rooms').doc(selectedRoomId);\n\n    roomRef.update({\n      members: [...selectedRoom.members, ...value.map((val) => val.value)],\n    });\n\n    setIsInviteMemberVisible(false);\n  };\n\n  const handleCancel = () => {\n    // reset form value\n    form.resetFields();\n    setValue([]);\n\n    setIsInviteMemberVisible(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        title='Mời thêm thành viên'\n        visible={isInviteMemberVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n      >\n        <Form form={form} layout='vertical'>\n          <DebounceSelect\n            mode='multiple'\n            name='search-user'\n            label='Tên các thành viên'\n            value={value}\n            placeholder='Nhập tên thành viên'\n            fetchOptions={fetchUserList}\n            onChange={(newValue) => setValue(newValue)}\n            style={{ width: '100%' }}\n            curMembers={selectedRoom.members}\n          />\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducer } from \"redux\";\nimport AuthSlice from \"./Reducer/AuthSlice\";\n\nconst store = configureStore({ reducer: AuthSlice });\n\nexport default store;\n","import \"./App.css\";\nimport Login from \"./components/Login\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport AuthProvider from \"./Context/AuthProvider\";\nimport AppProvider from \"./Context/AppProvider\";\nimport AddRoomModal from \"./components/Modals/AddRoomModal\";\nimport InviteMemberModal from \"./components/Modals/InviteMemberModal\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <AuthProvider>\n          <AppProvider>\n            <Switch>\n              <Route component={Login} path=\"/login\" />\n              <Route component={ChatRoom} path=\"/\" />\n            </Switch>\n            <AddRoomModal />\n            <InviteMemberModal />\n          </AppProvider>\n        </AuthProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}